<Window x:Class="yedaisler.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:behaviors="clr-namespace:yedaisler.Behaviors"
        xmlns:local="clr-namespace:yedaisler"
        xmlns:menu="clr-namespace:yedaisler.Menu"
        xmlns:todo="clr-namespace:yedaisler.ToDo"
        mc:Ignorable="d"
        Title="yedaisler" MinHeight="30" MinWidth="50"  Height="{Binding Height.Value, Mode=TwoWay}" Width="{Binding Width.Value, Mode=TwoWay}"
        ResizeMode="CanResizeWithGrip" AllowsTransparency="True" WindowStyle="None" Background="Transparent"
        MouseLeftButtonDown="Window_MouseLeftButtonDown" MouseLeftButtonUp="Window_MouseLeftButtonUp" LocationChanged="Window_LocationChanged" Loaded="Window_Loaded">
    <i:Interaction.Behaviors>
        <behaviors:SnapWnd2ScrBehavior SnapDistanceHorizontal="{Binding SnapDistH.Value}" SnapDistanceVertical="{Binding SnapDistV.Value}" />
    </i:Interaction.Behaviors>
    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <!--
        <Style TargetType="{x:Type MenuItem}" x:Key="CustomMenuItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Background="#ffffff">
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        -->
        <Style TargetType="{x:Type MenuItem}" x:Key="FixPropMenuItem">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />

            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="MainDispText">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type MenuItem}" x:Key="CommonStyleMenuItem">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static menu:ItemType.Separator}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Separator Style="{DynamicResource {x:Static MenuItem.SeparatorStyleKey}}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static menu:ItemType.RootMenuHeader}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <StackPanel>
                                    <TextBlock Text="{Binding Name}" Foreground="Black"/>
                                    <StackPanel Orientation="Horizontal" >
                                        <Button Content="1" Width="30"/>
                                        <Button Content="2" Width="30"/>
                                    </StackPanel>
                                </StackPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static menu:ItemType.ToDoHeader}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Caption}" Foreground="Black"/>
                                    <TextBlock Text="{Binding Tag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}}}" Foreground="Black"/>
                                    <StackPanel.Resources>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </StackPanel.Resources>
                                </StackPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static menu:ItemType.None}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <MenuItem Header="Error: ItemType指定ミス"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type MenuItem}" x:Key="RootStyleMenuItem" BasedOn="{StaticResource CommonStyleMenuItem}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static menu:ItemType.ToDo}">
                    <Setter Property="ItemsSource">
                        <Setter.Value>
                            <CompositeCollection>
                                <menu:ToDoHeader />
                                <MenuItem Header="実行"/>
                                <menu:Separator />
                                <MenuItem Header="終了"/>
                            </CompositeCollection>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Header" Value="{Binding Name.Value}" />
                    <Setter Property="Tag" Value="{Binding StateDisp.Value}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static menu:ItemType.System}">
                    <Setter Property="ItemsSource">
                        <Setter.Value>
                            <CompositeCollection>
                                <MenuItem Header="設定"/>
                            </CompositeCollection>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Header" Value="{Binding Name}" />
                </DataTrigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource CommonStyleMenuItem}" />
            </Style.Resources>
        </Style>

        <Style TargetType="{x:Type MenuItem}" x:Key="Depth1_MenuItem" BasedOn="{StaticResource RootStyleMenuItem}">
            <!--<Setter Property="ItemsSource" Value="{Binding Items}" />-->
            <!--<Setter Property="ItemsSource">
                <Setter.Value>
                    <CompositeCollection>
                        <local_menu:HeaderItem />
                        <MenuItem Header="実行"/>
                        <local_menu:SeparatorItem />
                        <local_menu:SystemItem />
                        <MenuItem Header="終了"/>
                    </CompositeCollection>
                </Setter.Value>
            </Setter>-->
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <!--
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <TextBlock Text="{Binding Name.Value}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        -->
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="red"/>
                                <Setter Property="Background" Value="Yellow"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>



        <!--
        <DataTemplate x:Key="SeparatorMenuTemplate" DataType="menu:Separator">
            <Separator/>
        </DataTemplate>
        <DataTemplate x:Key="ToDoMenuTemplate" DataType="todo:Item">
            <DataTemplate.Resources>
                <Style TargetType="MenuItem">
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Header" Value="{Binding Name.Value}" />
                    <Setter Property="ItemsSource">
                        <Setter.Value>
                            <CompositeCollection>
                                <menu:ToDoHeader />
                                <MenuItem Header="{Binding Name.Value}"/>
                                <MenuItem Header="{Binding StateDisp.Value}"/>
                                <MenuItem Header="実行"/>
                                <menu:Separator />
                                <MenuItem Header="終了"/>
                            </CompositeCollection>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataTemplate.Resources>
            <TextBlock Text="{Binding Name.Value}"/>
        </DataTemplate>
        <DataTemplate x:Key="CommandMenuTemplate" DataType="MenuItem">
            <MenuItem Header="{Binding Name}"/>
        </DataTemplate>
        -->

        <local:ContextMenuElemConverter x:Key="ContextMenuElemConverter"/>
        <local:DebugConverter x:Key="DebugConverter"/>
        <local:DebugMultiConverter x:Key="DebugMultiConverter"/>
        <local:ContextMenuStateBackColorConverter x:Key="ContextMenuStateBackColorConverter"/>
        <local:ContextMenuStateFontColorConverter x:Key="ContextMenuStateFontColorConverter"/>
        <local:ToDoActionDispConverter x:Key="ToDoActionDispConverter"/>
        <local:BindingResource x:Key="BkColor" Binding="{Binding BrushBackMenu.Value}" />
        <local:BindingResource x:Key="BaseFontColor" Binding="{Binding BrushBaseFont.Value}" />
        <local:BindingResource x:Key="BkReadyColor" Binding="{Binding BrushBackReady.Value}" />
        <local:BindingResource x:Key="BkDoingColor" Binding="{Binding BrushBackDoing.Value}" />
        <local:BindingResource x:Key="BkDoneColor" Binding="{Binding BrushBackDone.Value}" />


        <!-- WPF Default Control -->
        <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999"/>
        <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF212121"/>
        <SolidColorBrush x:Key="Menu.Static.Separator" Color="#FFD7D7D7"/>
        <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>
        <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
        <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
        <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
        <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
        <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
        <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
            <Setter Property="ClickMode" Value="Hover"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="templateRoot" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="SubMenuItemControlTemplate" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Height="22" SnapsToDevicePixels="true">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Border x:Name="GlyphPanel" Background="{StaticResource MenuItem.Highlight.Background}" BorderBrush="{StaticResource MenuItem.Highlight.Border}" BorderThickness="1" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
                        <Path x:Name="Glyph" Data="{DynamicResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Height="11" Width="9"/>
                    </Border>
                    <ContentPresenter ContentSource="Header" Grid.Column="2" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                    <Path x:Name="RightArrow" Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{StaticResource Menu.Static.Foreground}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
                        <Border x:Name="SubMenuBorder" Background="{Binding DataContext.BrushBackMenu.Value, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" BorderBrush="{StaticResource Menu.Static.Border}" BorderThickness="1" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <!--<Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>-->
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="RightArrow" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- WPF Default Control -->


        <CollectionViewSource x:Key="ContextMenuSource" Source="{Binding ToDos}" />
        <Style TargetType="{x:Type ContextMenu}" x:Key="RootContextMenu">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="Foreground" Value="{local:BindingResource Resource={StaticResource BaseFontColor}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border BorderThickness="1">
                            <!--
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Background="{Binding DataContext.BrushBackground.Value, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}">
                            -->

                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Background="{local:BindingResource Resource={StaticResource BkColor}}">
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsSource">
                <Setter.Value>
                    <CompositeCollection>
                        <menu:RootMenuHeader />
                        <CollectionContainer Collection="{Binding Source={StaticResource ContextMenuSource}}"/>
                        <menu:Separator />
                        <menu:SystemItem />
                        <MenuItem Header="終了" Command="{Binding AppExitCommand}" Style="{StaticResource FixPropMenuItem}" />
                    </CompositeCollection>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="{x:Type MenuItem}">
                    <Style.Triggers>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource ContextMenuStateBackColorConverter}" UpdateSourceTrigger="PropertyChanged">
                                        <Binding Path="State.Value" />
                                        <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="Background" Value="#00ff00"/>
                        </Trigger>
                        -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ContextMenuElemConverter}, ConverterParameter=0}" Value="{x:Static menu:ItemType.Separator}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Separator Style="{DynamicResource {x:Static MenuItem.SeparatorStyleKey}}" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ContextMenuElemConverter}, ConverterParameter=0}" Value="{x:Static menu:ItemType.ToDo}">
                            <Setter Property="Template" Value="{StaticResource SubMenuItemControlTemplate}"/>
                            <Setter Property="ItemsSource">
                                <Setter.Value>
                                    <CompositeCollection>
                                        <menu:ToDoHeader />
                                        <menu:ToDoAction />
                                        <menu:Separator />
                                        <menu:SystemHeader Header="強制実行"/>
                                        <menu:Command Name="終了"/>
                                    </CompositeCollection>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Header" Value="{Binding Name.Value}" />
                            <Setter Property="DataContext" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ContextMenuElemConverter}, ConverterParameter=0}" Value="{x:Static menu:ItemType.RootMenuHeader}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <StackPanel>
                                            <TextBlock Text="{Binding Name}" />
                                            <StackPanel Orientation="Horizontal" >
                                                <Button Content="1" Width="30"/>
                                                <Button Content="2" Width="30"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ContextMenuElemConverter}, ConverterParameter=0}" Value="{x:Static menu:ItemType.ToDoHeader}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Grid>
                                            <Grid.Resources>
                                                <Style TargetType="{x:Type Grid}">
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <MultiBinding Converter="{StaticResource ContextMenuStateBackColorConverter}" UpdateSourceTrigger="PropertyChanged">
                                                                <Binding Path="DataContext.State.Value" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}, AncestorLevel=2}"/>
                                                                <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}"/>
                                                            </MultiBinding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Foreground" Value="{Binding DataContext.BrushBaseFont.Value, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                                                </Style>
                                            </Grid.Resources>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Margin="5,2,5,2" Text="{Binding Caption}"/>
                                            <TextBlock Grid.Column="1" Margin="0,2,0,2" Text="{Binding DataContext.StateDisp.Value, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}, AncestorLevel=2}}"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ContextMenuElemConverter}, ConverterParameter=0}" Value="{x:Static menu:ItemType.SystemHeader}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Border BorderBrush="#d0c0c0c0" BorderThickness="1">
                                            <Grid>
                                                <Grid.Resources>
                                                    <Style TargetType="{x:Type Grid}">
                                                        <Setter Property="Background" Value="{Binding DataContext.BrushBackSystemHeader.Value, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                                                    </Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="Background" Value="{Binding DataContext.BrushBackSystemHeader.Value, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                                                        <Setter Property="Foreground" Value="{Binding DataContext.BrushBaseFont.Value, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                                                    </Style>
                                                </Grid.Resources>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Margin="5,2,5,2" Text="{Binding Header}"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ContextMenuElemConverter}, ConverterParameter=0}" Value="{x:Static menu:ItemType.System}">
                            <Setter Property="Template" Value="{StaticResource SubMenuItemControlTemplate}"/>
                            <Setter Property="ItemsSource">
                                <Setter.Value>
                                    <CompositeCollection>
                                        <MenuItem Header="設定" Style="{StaticResource FixPropMenuItem}"/>
                                    </CompositeCollection>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Header" Value="{Binding Name}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ContextMenuElemConverter}, ConverterParameter=0}" Value="{x:Static menu:ItemType.ToDoAction}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <MenuItem DataContext="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}, AncestorLevel=2}}" d:DataContext="{x:Type todo:Item}">
                                            <MenuItem.Style>
                                                <Style TargetType="{x:Type MenuItem}">
                                                    <Setter Property="Header">
                                                        <Setter.Value>
                                                            <MultiBinding Converter="{StaticResource ToDoActionDispConverter}" UpdateSourceTrigger="PropertyChanged">
                                                                <Binding Path="State.Value" />
                                                                <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem},AncestorLevel=2}"/>
                                                            </MultiBinding>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Command">
                                                        <Setter.Value>
                                                            <Binding Path="DataContext.OnMenuStateAction" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem},AncestorLevel=2}"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="CommandParameter">
                                                        <Setter.Value>
                                                            <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ContextMenuElemConverter}, ConverterParameter=0}" Value="{x:Static menu:ItemType.Command}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <MenuItem Header="{Binding Name}" Tag="true" Command="{Binding DataContext.Command1, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}, AncestorLevel=2}}" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
            <!--
            <Setter Property="ItemTemplateSelector">
                <Setter.Value>
                    <local:ContextMenuTemplateSelector IsSeparator="{StaticResource SeparatorMenuTemplate}" IsToDo="{StaticResource ToDoMenuTemplate}" IsCommand="{StaticResource CommandMenuTemplate}" />
                </Setter.Value>
            </Setter>
            -->
        </Style>
    </Window.Resources>
    <Window.ContextMenu>
        <ContextMenu x:Name="menu" Style="{StaticResource RootContextMenu}" >
            <!--DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"-->
            <!--
            <ContextMenu.ItemsSource>
                <CompositeCollection>
                    <menu:RootMenuHeader />
                    <CollectionContainer Collection="{Binding Source={StaticResource ContextMenuSource}}"/>
                    <menu:Separator />
                    <menu:SystemItem />
                    <MenuItem Header="終了" Command="{Binding AppExitCommand}" Style="{StaticResource FixPropMenuItem}" />
                </CompositeCollection>
            </ContextMenu.ItemsSource>
            -->
            <!--
            <ContextMenu.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Header" Value="{Binding Name.Value}" />
                    <Setter Property="ItemsSource" Value="{Binding Items}" />
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="MenuItem">
                                <Setter Property="Header" Value="{Binding Name.Value}" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ContextMenu.ItemContainerStyle>

            <Separator/>
            <MenuItem Header="メニュー1" Foreground="#FFFDF6F6">
                <MenuItem Header="メニュー1" Foreground="#FFFDF6F6" />
            </MenuItem>
            <MenuItem Header="メニュー2" Foreground="#FFFDF6F6" />
            -->
        </ContextMenu>
    </Window.ContextMenu>
    <Grid >
        <Grid.Style>
            <Style TargetType="{x:Type Grid}">
                <Setter Property="Background">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ContextMenuStateBackColorConverter}" UpdateSourceTrigger="PropertyChanged">
                            <Binding Path="State.Value" />
                            <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Style>

        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ContextMenuStateFontColorConverter}" UpdateSourceTrigger="PropertyChanged">
                                <Binding Path="State.Value" />
                                <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Text">
                        <Setter.Value>test</Setter.Value>
                    </Setter>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <!--
        <Popup x:Name="menu">
            <StackPanel Background="#40202020">
                <ListBox Background="Transparent">
                    <MenuItem Header="メニュー1" Foreground="#FFFDF6F6">
                        <MenuItem Header="メニュー1" Foreground="#FFFDF6F6" />
                    </MenuItem>
                </ListBox>
                <Separator/>
                <MenuItem Header="メニュー1" Foreground="#FFFDF6F6">
                    <MenuItem Header="メニュー1" Foreground="#FFFDF6F6" />
                </MenuItem>
                <MenuItem Header="メニュー2" Foreground="#FFFDF6F6" />
            </StackPanel>
            <Popup.ContextMenu>
                <ContextMenu x:Name="menu2">
                    <Separator/>
                    <MenuItem Header="メニュー1" Foreground="#FFFDF6F6">
                        <MenuItem Header="メニュー1" Foreground="#FFFDF6F6" />
                    </MenuItem>
                    <MenuItem Header="メニュー2" Foreground="#FFFDF6F6" />
                </ContextMenu>
            </Popup.ContextMenu>
        </Popup>
            -->
    </Grid>
</Window>
